---

apiVersion: v1
kind: Namespace
metadata:
  name: ns-testM

---

apiVersion: v1
kind: Secret
metadata:
  name: ssl-testM
  namespace: ns-testM
type: kubernetes.io/tls
data:
  tls.crt: testM.crt
  tls.key: testM.pem

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: cfg-app-1
  namespace: ns-testM
data:
  APP_ENV: production
  LOG_LEVEL: info

---

apiVersion: v1
kind: Secret
metadata:
  name: cfg-ssl-app-1
  namespace: ns-testM
type: Opaque
data:
  username: app
  passowrd: app1234
  DB_PASSWORD: db1234

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-testM
  namespace: ns-testM
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-1
  template:
    metadata:
      labels:
        app: app-1
    spec:
      containers:
        - name: cont-nginx-1
          image: nginx:latest
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1024Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: cfg-app-1
            - secretRef:
                name: cfg-ssl-app-1
          volumeMounts:
            - name: efs-storage
              mountPath: /data
      volumes:
        - name: efs-storage
          persistentVolumeClaim:
            claimName: efs-pv-claim-app-1

---

apiVersion: v1
kind: Service
metadata:
  name: svc-app-1
  namespace: ns-testM
spec:
  selector:
    app: app-1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ing-nginx-1
  namespace: ns-testM
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts:
        - testM.com
      secretName: tls-secret
  rules:
    - host: testM.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: svc-app-1
                port:
                  number: 80

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-app-1
  namespace: ns-testM
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: deploy-testM
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-pv-app-1
  namespace: ns-testM
spec:
  capacity:
    storage: 30Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-10000001

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-pv-claim-app-1
  namespace: ns-testM
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 5Gi